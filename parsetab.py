
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BANG CATGIRL CHAN COMMA DESU DIVIDE EQ EQOP GREATER GREATEREQ HAREM ID ISTUDIED KUN LBRACE LBRACK LESS LESSEQ LPAREN MINUS MULTID NANI NEQ NOU NUMBER OWO PERIOD PLUS RBRACE RBRACK REAL RPAREN SAN SEMICOL SHI SQUIGGLY TIMES UWU WAIFU WHILEU YOKAIexpression : NUMBER PLUS NUMBER\n                  | NUMBER MINUS NUMBER\n                  | NUMBER\n    '
    
_lr_action_items = {'NUMBER':([0,3,4,],[2,5,6,]),'$end':([1,2,5,6,],[0,-3,-1,-2,]),'PLUS':([2,],[3,]),'MINUS':([2,],[4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> NUMBER PLUS NUMBER','expression',3,'p_binary_operators','parser.py',13),
  ('expression -> NUMBER MINUS NUMBER','expression',3,'p_binary_operators','parser.py',14),
  ('expression -> NUMBER','expression',1,'p_binary_operators','parser.py',15),
]
