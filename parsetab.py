
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSAND CATGIRL CHAN COMMA DEQ DESU DIVIDE EQ EQOP GEQ GT HAREM ID ISTUDIED KUN LBRACE LBRACK LEQ LPAREN LT MEQ MINUS MM MULTID NANI NEQ NOT NOU NUMBER OR OWO PEQ PERIOD PLUS PP RBRACE RBRACK REAL RPAREN SAN SEMICOL SHI SQUIGGLY TEQ TIMES UWU WAIFU WHILEU YOKAI statement : expr SEMICOL\n                  | assignment SEMICOL\n                  | declaration SEMICOL\n                  | statement statement\n    expr : numExpr\n            | reference\n    assignment : reassign\n                  | initialize\n                  | arrayAssign\n     reassign : ID EQ expr\n     arrayAssign : ID LBRACK NUMBER RBRACK EQ expr\n     arrayLiteral : LBRACK RBRACK\n                     | LBRACK exprLst RBRACK\n     exprLst : expr\n                | expr COMMA exprLst\n     initialize : declaration EQ expr\n                   | declaration EQ arrayLiteral\n                   | const_declaration EQ expr\n     declaration : array_declaration\n                    | let_declartion\n    const_declaration : REAL array_declaration\n                         | REAL let_declartion\n    array_declaration : type HAREM IDlet_declartion : type IDtype : WAIFU\n            | CATGIRL\n    numExpr : numExpr PLUS numExpr\n                  | numExpr MINUS numExpr\n                  | numExpr TIMES numExpr\n                  | numExpr DIVIDE numExprnumExpr : MINUS numExpr %prec UMINUSnumExpr : LPAREN numExpr RPARENnumExpr : NUMBERnumExpr : letReferencereference : letReference\n                 | arrayReference\n    letReference : ID arrayReference : ID LBRACK NUMBER RBRACK '
    
_lr_action_items = {'MINUS':([0,1,5,12,13,14,15,17,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,45,46,47,48,49,50,51,62,64,],[12,12,29,12,12,-33,-34,-37,12,-1,-2,-3,12,12,12,12,12,-31,-34,-37,29,12,12,12,-37,-27,-28,-29,-30,-32,12,12,]),'LPAREN':([0,1,12,13,23,24,25,26,27,28,29,30,31,36,38,45,62,64,],[13,13,13,13,13,-1,-2,-3,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([0,1,12,13,23,24,25,26,27,28,29,30,31,36,37,38,45,59,62,64,],[14,14,14,14,14,-1,-2,-3,14,14,14,14,14,14,53,14,14,63,14,14,]),'ID':([0,1,12,13,19,21,22,23,24,25,26,27,28,29,30,31,36,38,39,45,62,64,],[17,17,34,34,40,-25,-26,17,-1,-2,-3,46,34,34,34,34,46,46,55,46,46,46,]),'REAL':([0,1,23,24,25,26,],[20,20,20,-1,-2,-3,]),'WAIFU':([0,1,20,23,24,25,26,],[21,21,21,21,-1,-2,-3,]),'CATGIRL':([0,1,20,23,24,25,26,],[22,22,22,22,-1,-2,-3,]),'$end':([1,23,24,25,26,],[0,-4,-1,-2,-3,]),'SEMICOL':([2,3,4,5,6,7,8,9,10,11,14,15,16,17,32,33,34,40,43,44,46,47,48,49,50,51,52,54,55,56,60,61,66,67,],[24,25,26,-5,-6,-7,-8,-9,-19,-20,-33,-34,-36,-37,-31,-34,-37,-24,-16,-17,-37,-27,-28,-29,-30,-32,-10,-18,-23,-12,-38,-13,-38,-11,]),'EQ':([4,10,11,17,18,40,41,42,55,60,],[27,-19,-20,36,38,-24,-21,-22,-23,64,]),'COMMA':([5,6,14,15,16,32,33,34,46,47,48,49,50,51,58,66,],[-5,-6,-33,-34,-36,-31,-34,-37,-37,-27,-28,-29,-30,-32,62,-38,]),'RBRACK':([5,6,14,15,16,32,33,34,45,46,47,48,49,50,51,53,57,58,63,65,66,],[-5,-6,-33,-34,-36,-31,-34,-37,56,-37,-27,-28,-29,-30,-32,60,61,-14,66,-15,-38,]),'PLUS':([5,14,15,17,32,33,34,35,46,47,48,49,50,51,],[28,-33,-34,-37,-31,-34,-37,28,-37,-27,-28,-29,-30,-32,]),'TIMES':([5,14,15,17,32,33,34,35,46,47,48,49,50,51,],[30,-33,-34,-37,-31,-34,-37,30,-37,30,30,-29,-30,-32,]),'DIVIDE':([5,14,15,17,32,33,34,35,46,47,48,49,50,51,],[31,-33,-34,-37,-31,-34,-37,31,-37,31,31,-29,-30,-32,]),'RPAREN':([14,32,33,34,35,47,48,49,50,51,],[-33,-31,-34,-37,51,-27,-28,-29,-30,-32,]),'LBRACK':([17,27,46,],[37,45,59,]),'HAREM':([19,21,22,],[39,-25,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,1,23,],[1,23,23,]),'expr':([0,1,23,27,36,38,45,62,64,],[2,2,2,43,52,54,58,58,67,]),'assignment':([0,1,23,],[3,3,3,]),'declaration':([0,1,23,],[4,4,4,]),'numExpr':([0,1,12,13,23,27,28,29,30,31,36,38,45,62,64,],[5,5,32,35,5,5,47,48,49,50,5,5,5,5,5,]),'reference':([0,1,23,27,36,38,45,62,64,],[6,6,6,6,6,6,6,6,6,]),'reassign':([0,1,23,],[7,7,7,]),'initialize':([0,1,23,],[8,8,8,]),'arrayAssign':([0,1,23,],[9,9,9,]),'array_declaration':([0,1,20,23,],[10,10,41,10,]),'let_declartion':([0,1,20,23,],[11,11,42,11,]),'letReference':([0,1,12,13,23,27,28,29,30,31,36,38,45,62,64,],[15,15,33,33,15,15,33,33,33,33,15,15,15,15,15,]),'arrayReference':([0,1,23,27,36,38,45,62,64,],[16,16,16,16,16,16,16,16,16,]),'const_declaration':([0,1,23,],[18,18,18,]),'type':([0,1,20,23,],[19,19,19,19,]),'arrayLiteral':([27,],[44,]),'exprLst':([45,62,],[57,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expr SEMICOL','statement',2,'p_statement','parser.py',27),
  ('statement -> assignment SEMICOL','statement',2,'p_statement','parser.py',28),
  ('statement -> declaration SEMICOL','statement',2,'p_statement','parser.py',29),
  ('statement -> statement statement','statement',2,'p_statement','parser.py',30),
  ('expr -> numExpr','expr',1,'p_expr','parser.py',36),
  ('expr -> reference','expr',1,'p_expr','parser.py',37),
  ('assignment -> reassign','assignment',1,'p_assignment','parser.py',43),
  ('assignment -> initialize','assignment',1,'p_assignment','parser.py',44),
  ('assignment -> arrayAssign','assignment',1,'p_assignment','parser.py',45),
  ('reassign -> ID EQ expr','reassign',3,'p_reassign','parser.py',51),
  ('arrayAssign -> ID LBRACK NUMBER RBRACK EQ expr','arrayAssign',6,'p_arrayAssign','parser.py',66),
  ('arrayLiteral -> LBRACK RBRACK','arrayLiteral',2,'p_arrayLiteral','parser.py',81),
  ('arrayLiteral -> LBRACK exprLst RBRACK','arrayLiteral',3,'p_arrayLiteral','parser.py',82),
  ('exprLst -> expr','exprLst',1,'p_exprList','parser.py',91),
  ('exprLst -> expr COMMA exprLst','exprLst',3,'p_exprList','parser.py',92),
  ('initialize -> declaration EQ expr','initialize',3,'p_initialize','parser.py',101),
  ('initialize -> declaration EQ arrayLiteral','initialize',3,'p_initialize','parser.py',102),
  ('initialize -> const_declaration EQ expr','initialize',3,'p_initialize','parser.py',103),
  ('declaration -> array_declaration','declaration',1,'p_declaration','parser.py',114),
  ('declaration -> let_declartion','declaration',1,'p_declaration','parser.py',115),
  ('const_declaration -> REAL array_declaration','const_declaration',2,'p_const_declaration','parser.py',122),
  ('const_declaration -> REAL let_declartion','const_declaration',2,'p_const_declaration','parser.py',123),
  ('array_declaration -> type HAREM ID','array_declaration',3,'p_array_declaration','parser.py',131),
  ('let_declartion -> type ID','let_declartion',2,'p_let_declaration','parser.py',145),
  ('type -> WAIFU','type',1,'p_type','parser.py',156),
  ('type -> CATGIRL','type',1,'p_type','parser.py',157),
  ('numExpr -> numExpr PLUS numExpr','numExpr',3,'p_numExpr_binop','parser.py',163),
  ('numExpr -> numExpr MINUS numExpr','numExpr',3,'p_numExpr_binop','parser.py',164),
  ('numExpr -> numExpr TIMES numExpr','numExpr',3,'p_numExpr_binop','parser.py',165),
  ('numExpr -> numExpr DIVIDE numExpr','numExpr',3,'p_numExpr_binop','parser.py',166),
  ('numExpr -> MINUS numExpr','numExpr',2,'p_numExpr_uminus','parser.py',178),
  ('numExpr -> LPAREN numExpr RPAREN','numExpr',3,'p_numExpr_group','parser.py',183),
  ('numExpr -> NUMBER','numExpr',1,'p_numExpr_number','parser.py',188),
  ('numExpr -> letReference','numExpr',1,'p_numExpr_reference','parser.py',193),
  ('reference -> letReference','reference',1,'p_reference','parser.py',198),
  ('reference -> arrayReference','reference',1,'p_reference','parser.py',199),
  ('letReference -> ID','letReference',1,'p_letReference','parser.py',205),
  ('arrayReference -> ID LBRACK NUMBER RBRACK','arrayReference',4,'p_arrayReference','parser.py',214),
]
